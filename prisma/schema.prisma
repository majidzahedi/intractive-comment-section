// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(cuid())
  email    String    @unique
  name     String
  comments Comment[]

  createdAt DateTime? @default(now())
  updatedAt DateTime  @updatedAt

  password Password?
  Vote     Vote[]
}

model Password {
  hash String

  user   User?  @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Comment {
  id      String @id @default(cuid())
  comment String

  Children Comment[] @relation("Comment_Children")
  parent   Comment?  @relation("Comment_Children", fields: [parentId], references: [id], onDelete: Cascade)
  parentId String?

  votes Vote[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String?
}

model Vote {
  id   String    @id @default(cuid())
  vote VoteStat?

  user   User?  @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique

  comment   Comment? @relation(fields: [commentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  commentId String?
}

enum VoteStat {
  UPVOTE
  DOWNVOTE
}
